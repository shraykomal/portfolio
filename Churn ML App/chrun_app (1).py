# -*- coding: utf-8 -*-
"""chrun_app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vwDjRkJlfd_HKtqK_laqiqWuCucVPmcY
"""

!pkill streamlit ## to restart live website UI
!kill $(ps aux | grep 'ngrok' | grep -v grep | awk '{print $2}')

!pip install streamlit pyngrok scikit-learn pandas joblib #installing libraries

import streamlit as st # importing libs
import pandas as pd
import joblib

df

from sklearn.ensemble import RandomForestClassifier # using RF as machine learning model
from sklearn.model_selection import train_test_split #  for spliting data
import joblib

# Upload CSV
from google.colab import files
uploaded = files.upload()

# Load and preprocess
df = pd.read_csv("WA_Fn-UseC_-Telco-Customer-Churn.csv") # data was downloaded from kaggle
df = df[df["TotalCharges"] != " "]
df["TotalCharges"] = df["TotalCharges"].astype(float)
df["Churn"] = df["Churn"].map({"Yes": 1, "No": 0})
df["Contract"] = df["Contract"].map({"Month-to-month": 0, "One year": 1, "Two year": 2})

X = df[["tenure", "MonthlyCharges", "Contract"]]
y = df["Churn"]

X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42)

# Train model
model = RandomForestClassifier()
model.fit(X_train, y_train)

# Save model to file
joblib.dump(model, "churn_model.pkl")
print("✅ Model saved as churn_model.pkl")

X

y # dependent variable -  "Yes": 1, "No": 0

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# import pandas as pd
# import joblib
# 
# model = joblib.load("churn_model.pkl")
# 
# st.title("🔮 Customer Churn Predictor")
# 
# tenure = st.slider("Tenure (months)", 0, 72, 12)
# monthly_charges = st.number_input("Monthly Charges", min_value=0.0, value=50.0)
# contract_type = st.selectbox("Contract Type", ["Month-to-month", "One year", "Two year"])
# 
# contract_map = {"Month-to-month": 0, "One year": 1, "Two year": 2}
# contract = contract_map[contract_type]
# 
# input_df = pd.DataFrame({
#     'tenure': [tenure],
#     'MonthlyCharges': [monthly_charges],
#     'Contract': [contract]
# })
# 
# if st.button("Predict"):
#     prediction = model.predict(input_df)[0]
#     prob = model.predict_proba(input_df)[0][1]
# 
#     if prediction == 1:
#         st.error(f"⚠️ Likely to churn. Probability: {prob:.2f}")
#     else:
#         st.success(f"✅ Likely to stay. Probability: {1 - prob:.2f}")
#

from pyngrok import ngrok

# Start streamlit in background
!streamlit run app.py &>/content/logs.txt &

# Open the tunnel (this is the fixed version)
public_url = ngrok.connect("8501", "http")
print(f"🌐 Your Streamlit app is live at: {public_url}")

"""# New Section"""

!ngrok config add-authtoken <code>

!pkill streamlit